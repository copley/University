#BlueJ class context
comment0.params=
comment0.target=Board()
comment0.text=Construct\ a\ new\ Board\ object
comment1.params=x\ y
comment1.target=boolean\ on(double,\ double)
comment1.text=Is\ the\ position\ (x,y)\ on\ the\ board
comment10.params=cord
comment10.target=boolean\ leftOrRightTouching(int[])
comment10.text=\n\ \n
comment11.params=
comment11.target=boolean\ draw()
comment11.text=\n\ Draw\ the\ board.\n\ Assumes\ that\ the\ graphics\ pane\ has\ been\ cleared\n
comment12.params=
comment12.target=boolean\ reset()
comment12.text=\n\ Resets\ the\ board\ class\n\ returns\ true\ if\ an\ error\ occored\n
comment13.params=
comment13.target=void\ testValid()
comment13.text=\n\ Tests\ the\ reset,\ place,\ pick,\ commit,\ and\ validPlay\ methods\n\ by\ putting\ tiles\ on\ the\ board.\n\ Doesn't\ draw\ anything.\n
comment2.params=x\ y
comment2.target=int[]\ rowCol(double,\ double)
comment2.text=\n\ Return\ the\ row/col\ corresponding\ to\ the\ point\ x,y.\n
comment3.params=row\ col
comment3.target=Tile\ pickup(int,\ int)
comment3.text=\n\ Pickup\ tile\ from\ the\ board\ or\ rack\n
comment4.params=tile\ row\ col
comment4.target=boolean\ place(Tile,\ int,\ int)
comment4.text=\n\ Place\ the\ tile\ on\ the\ board,\ if\ the\ board\ position\ is\ empty\n
comment5.params=row\ col
comment5.target=boolean\ isEmpty(int,\ int)
comment5.text=\n\ Returns\ wether\ the\ cell\ at\ row/col\ is\ empty\ or\ not\n
comment6.params=
comment6.target=void\ commit()
comment6.text=\n\ Commit\ all\ the\ workingTiles\ to\ the\ board\n
comment7.params=
comment7.target=int\ getRoundScore()
comment7.text=\n\ Will\ return\ the\ socre\ for\ the\ current\ round,\ i\ got\ the\ information\ on\ scoring\ from\n\ http\://en.wikipedia.org/wiki/Scrabble\#Scoring\n\ \n\ This\ function\ assumes\ that\ the\ calling\ program\ has\ checked\ to\ see\ if\ the\ current\ play\ is\ valid\n\ \n\ The\ Scoring\ Rules\:\n\ -\ The\ score\ of\ a\ word\ is\ the\ sum\ of\ all\ the\ tiles\ values\ mulitplied\ by\ any\ bonus\ square\n\ -\ If\ you\ add\ a\ letter\ to\ another\ exsisting\ word\ you\ get\ all\ the\ letter\ values\ from\ the\ exsiting\n\ \ \ word\ but\ any\ multiplier\ under\ a\ commited\ tile\ cant\ be\ used\ again.\n\ -\ If\ 7\ tiles\ are\ played\ then\ you\ get\ a\ bonus\ of\ 50\ points\n
comment8.params=
comment8.target=boolean\ validPlay()
comment8.text=\n\ Returns\ true\ if\ the\ working\ tiles\ consitute\ a\ valid\ play\:\n\ The\ tiles\ must\ all\ be\ on\ a\ single\ line\ (row\ or\ column)\ and\ with\ no\ gaps.\n\ \ "No\ gaps"\ means\ that\ there\ must\ not\ be\ any\ empty\ cell\ between\ any\ pair\n\ \ of\ moveable\ tiles,\ though\ the\ movable\ tiles\ are\ not\ necessarily\ adjacent\n\ \ if\ there\ are\ any\ fixed\ tiles\ between\ the\ movable\ tiles.\n\ At\ least\ one\ of\ the\ moveable\ tiles\ must\ be\ adjacent\ to\ a\ fixed\ tile,\n\ unless\ it\ is\ the\ very\ first\ turn,\ in\ which\ case\ there\ are\ no\ fixed\ tiles.\n
comment9.params=cord
comment9.target=boolean\ isTouchingCommited(int[])
comment9.text=\n\ Determins\ if\ the\ tile\ at\ cord\ is\ touching\ a\ commited\ tile\n\ returns\ true\ if\ the\ tile\ is\ touching\ a\ commited\ one\n
numComments=14
