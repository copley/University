#BlueJ class context
comment0.params=
comment0.target=FastFood()
comment1.params=
comment1.target=void\ printInstructions()
comment10.params=args
comment10.target=void\ main(java.lang.String[])
comment2.params=name
comment2.target=void\ buttonPerformed(java.lang.String)
comment2.text=Respond\ to\ the\ buttons
comment3.params=key
comment3.target=void\ keyPerformed(java.lang.String)
comment4.params=
comment4.target=void\ generateOrder()
comment4.text=Create\ a\ new\ order\ and\ put\ it\ on\ the\ queue\ to\ be\ processed
comment5.params=item
comment5.target=void\ addItem(java.lang.String)
comment5.text=\ As\ long\ as\ there\ is\ an\ order\ in\ the\ queue,\ adds\ the\ specified\r\n\ \ item\ to\ the\ order\ at\ the\ head\ of\ the\ queue,\r\n\ \ If\ adding\ the\ item\ fails\ (ie,\ it\ isn't\ one\ of\ the\ items\r\n\ \ that\ are\ wanted\ by\ the\ order)\ then\ the\ price\r\n\ \ of\ the\ item\ is\ deducted\ from\ the\ current\ balance.\r\n
comment6.params=
comment6.target=void\ deliverOrder()
comment6.text=\ As\ long\ as\ there\ is\ an\ order\ at\ the\ front\ of\ the\ queue\ and\ it\ is\ ready,\r\n\ \ take\ the\ first\ order\ off\ the\ queue,\ compute\ the\ price\ of\ the\ order,\r\n\ \ and\ update\ the\ total\ balance\ by\ adding\ the\ order\ price.\r\n\ \ If\ there\ is\ not\ a\ ready\ order\ on\ the\ queue,\ it\ prints\ a\ warning\ message\r\n
comment7.params=
comment7.target=void\ drawOrders()
comment7.text=\ Draw\ the\ queue\ of\ orders\ on\ the\ Graphics\ pane.\r\n\ \ Also\ draws\ the\ current\ balance\ in\ the\ top\ left\ corner\r\n
comment8.params=
comment8.target=void\ startGame()
comment9.params=
comment9.target=void\ run()
numComments=11
